{"version":3,"sources":["utils/fetchGetAPI.jsx","utils/fetchPostAPI.jsx","components/AddNote.jsx","components/NavBar.jsx","utils/fetchDeleteAPI.jsx","components/ViewNote.jsx","utils/fetchPutAPI.jsx","commons/Like.jsx","commons/Pagination.jsx","components/ViewAllNotes.jsx","utils/paginate.js","components/EditNote.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchGetAPI","url","a","fetch","method","mode","headers","cache","then","response","json","catch","error","res","fetchPostAPI","body","Note","state","topic","title","URL","noteText","categories","showModal","modalTopic","modalCategory","handleSubmit","JSON","stringify","liked","config","apiEndPoint","data","props","history","push","id","handleChangeTopic","event","target","value","handleToggleModal","setState","handleChangeTitle","handleChangeURL","handleChangeNotes","handleChangeTopicModal","console","log","handleChangeCategoryModal","handleSubmitNewTopic","category","Object","keys","length","Fragment","className","aria-hidden","onChange","this","defaultValue","map","key","Modal","isOpen","ModalHeader","ModalBody","type","placeholder","ModalFooter","onClick","readOnly","aria-describedby","cols","rows","Component","NavBar","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","fetchDeleteAPI","ViewNote","updatedAt","handleDelete","window","confirm","handleEdit","handleChanglePage","match","params","time","Date","setTime","toLocaleString","href","style","whiteSpace","fetchPutAPI","Like","handleLiked","Pagination","itemCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","page","ViewAllNotes","notes","sortByUpdated","sortedBy","direction","currentTarget","handleDetail","handleSort","sortByTopic","handlePageChange","paginatedNotes","items","pageNumber","startIndex","slice","take","paginate","scope","note","display","justifyContent","marginRight","EditNote","App","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b244d45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nconst fetchGetAPI = async url => {\n  let res = await fetch(url, {\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json())\n    .catch(error => {\n      return error;\n    });\n  return res;\n};\n\nexport default fetchGetAPI;\n","const fetchPostAPI = async (url, body) => {\n  return await fetch(url, {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: body,\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  })\n    .then(response => response.json())\n    .catch(error => {\n      return error;\n    });\n};\n\nexport default fetchPostAPI;\n","import React, { Component } from \"react\";\nimport \"../css/Note.css\";\nimport fetchGetAPI from \"../utils/fetchGetAPI\";\nimport config from \"../utils/config.json\";\nimport fetchPostAPI from \"../utils/fetchPostAPI\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Note extends Component {\n  state = {\n    topic: \"Choose...\",\n    title: \"\",\n    URL: \"\",\n    noteText: \"\",\n    categories: [],\n    showModal: false,\n    modalTopic: \"\",\n    modalCategory: \"\"\n  };\n\n  async componentDidMount() {\n    fetchGetAPI(config.apiEndPoint + \"/categories\")\n      .then(data =>\n        Object.keys(data).length\n          ? this.setState({\n              categories: data\n            })\n          : {}\n      )\n      .catch(error => {\n        throw error;\n      });\n  }\n  handleSubmit = () => {\n    let body = JSON.stringify({\n      topic: this.state.topic,\n      title: this.state.title,\n      url: this.state.URL,\n      noteText: this.state.noteText,\n      liked: false\n    });\n    fetchPostAPI(config.apiEndPoint + \"/notes\", body).then(data =>\n      this.props.history.push(\"/viewnote/\" + data.id)\n    );\n  };\n  handleChangeTopic = event => {\n    if (event.target.value === \"Add\") this.handleToggleModal();\n    else {\n      this.setState({ topic: event.target.value });\n    }\n  };\n  handleChangeTitle = event => {\n    this.setState({ title: event.target.value });\n  };\n  handleChangeURL = event => {\n    this.setState({ URL: event.target.value });\n  };\n  handleChangeNotes = event => {\n    this.setState({ noteText: event.target.value });\n  };\n  handleToggleModal = () => {\n    this.state.showModal === false\n      ? this.setState({ showModal: true })\n      : this.setState({ showModal: false });\n  };\n\n  handleChangeTopicModal = event => {\n    this.setState({ modalTopic: event.target.value }, () =>\n      console.log(this.state.modalTopic)\n    );\n  };\n  handleChangeCategoryModal = event => {\n    this.setState({ modalCategory: event.target.value }, () =>\n      console.log(this.state.modalCategory)\n    );\n  };\n  handleSubmitNewTopic = () => {\n    let body = JSON.stringify({\n      topic: this.state.modalTopic,\n      category: this.state.modalCategory\n    });\n    //save to table category\n    fetchPostAPI(config.apiEndPoint + \"/categories\", body);\n    //fetch table category to update topic options\n    fetchGetAPI(config.apiEndPoint + \"/categories\")\n      .then(data =>\n        Object.keys(data).length\n          ? this.setState({\n              categories: data\n            })\n          : {}\n      )\n      .catch(error => {\n        throw error;\n      });\n    this.setState({ showModal: false });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Note-header\">\n          <i className=\"fa fa-sticky-note-o\" aria-hidden=\"true\" />\n          {\"    \"}\n          Add new note\n        </div>\n        <div className=\"Note-body\">\n          <div className=\"Note-form\">\n            <form>\n              <div className=\"form-group\">\n                <label className=\"my-1 mr-2\">Topic</label>{\" \"}\n                <select\n                  className=\"custom-select my-1 mr-sm-2\"\n                  id=\"inlineFormCustomSelectPref\"\n                  onChange={this.handleChangeTopic}\n                  value={this.state.value}\n                >\n                  <option defaultValue>Choose...</option>\n                  {this.state.categories.map(category => (\n                    <option key={category.id} value={category.topic}>\n                      {category.topic + \"  (\" + category.category + \")\"}\n                    </option>\n                  ))}\n\n                  <option value=\"Add\">Add new topic</option>\n                </select>\n              </div>\n\n              <div>\n                <Modal isOpen={this.state.showModal}>\n                  <ModalHeader>\n                    <i className=\"fa fa-list-ul\" aria-hidden=\"true\" />\n                    {\"    \"}Add new topic\n                  </ModalHeader>\n                  <ModalBody className=\"ModalBody\">\n                    <div className=\"row\">\n                      <div className=\"form-group col-md-6\">\n                        <label>Topic</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"modalTopic\"\n                          placeholder=\"Enter topic name here\"\n                          onChange={this.handleChangeTopicModal}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"form-group col-md-6\">\n                        <label>Category</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"modalCategory\"\n                          onChange={this.handleChangeCategoryModal}\n                        />\n                      </div>\n                    </div>\n                  </ModalBody>\n                  <ModalFooter>\n                    <input\n                      value=\"Submit\"\n                      className=\"btn btn-note-custom\"\n                      onClick={this.handleSubmitNewTopic}\n                      readOnly\n                    />\n                    <input\n                      onClick={this.handleToggleModal}\n                      value=\"Cancel\"\n                      className=\"btn btn-note-custom\"\n                      readOnly\n                    />\n                  </ModalFooter>\n                </Modal>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"inputTitle\"\n                  aria-describedby=\"titleHelp\"\n                  placeholder=\"Enter title for new note\"\n                  onChange={this.handleChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>URL</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"inputURL\"\n                  placeholder=\"Enter tutorial url (optional)\"\n                  onChange={this.handleChangeURL}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Notes</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"inputNoteText\"\n                  placeholder=\"Enter note details here\"\n                  cols=\"30\"\n                  rows=\"15\"\n                  onChange={this.handleChangeNotes}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-custom\"\n                onClick={this.handleSubmit}\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"../css/NavBar.css\";\nconst NavBar = () => {\n  return (\n    <div className=\"NavBar \">\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <Link className=\"navbar-brand nav-brand-custom\" to=\"\">\n          My Note\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link nav-custom\" to={\"/\"}>\n                Home\n              </Link>\n            </li>\n\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link nav-custom\" to={\"/addnote\"}>\n                Add Note\n              </Link>\n            </li>\n\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link nav-custom\" to={\"/\"}>\n                All Notes\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","const fetchDeleteAPI = async url => {\n  await fetch(url, {\n    method: \"DELETE\",\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  });\n};\n\nexport default fetchDeleteAPI;\n","import React, { Component } from \"react\";\nimport \"../css/Note.css\";\nimport fetchGetAPI from \"../utils/fetchGetAPI\";\nimport config from \"../utils/config.json\";\nimport fetchDeleteAPI from \"../utils/fetchDeleteAPI\";\nclass ViewNote extends Component {\n  state = { topic: \"\", noteText: \"\", url: \"\", updatedAt: \"\", title: \"\" };\n  async componentDidMount() {\n    let id = this.props.match.params.id;\n    this.setState({ id: id });\n    fetchGetAPI(config.apiEndPoint + \"/notes/\" + id).then(data => {\n      let time = new Date();\n      time.setTime(data.updatedAt);\n\n      this.setState({\n        topic: data.topic,\n        noteText: data.noteText,\n        url: data.url,\n        updatedAt: time.toLocaleString(),\n        title: data.title\n      });\n    });\n  }\n  handleDelete = async () => {\n    if (window.confirm(\"Are you sure to delete this note?\")) {\n      await fetchDeleteAPI(config.apiEndPoint + \"/notes/\" + this.state.id);\n      this.props.history.push(\"/viewallnotes\");\n    }\n  };\n  handleEdit = () => {\n    this.props.history.push(\"/editnote/\" + this.state.id);\n  };\n  handleChanglePage = event => {\n    this.props.history.push(\"/viewallnotes\");\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Note-header\">\n          <i className=\"fa fa-list-alt\" aria-hidden=\"true\" />\n          {\"  \"}\n          <a>View note details</a>\n        </div>\n        <div className=\"Note-body\">\n          <div className=\"Note-table\">\n            <table className=\"table table-bordered table-hover \">\n              <caption>{this.state.title}</caption>\n              <tbody>\n                <tr>\n                  <th>\n                    <label className=\"my-1 mr-2\">Topic</label>\n                  </th>\n                  <td>\n                    <label className=\"my-1 mr-2\">{this.state.topic}</label>\n                  </td>\n                </tr>\n                <tr>\n                  <th>\n                    <label className=\"my-1 mr-2\">Url</label>\n                  </th>\n                  <td>\n                    <a\n                      href={this.state.url}\n                      className=\"my-1 mr-2\"\n                      target=\"_blank\"\n                    >\n                      {this.state.url}\n                    </a>\n                  </td>\n                </tr>\n                <tr>\n                  <th>\n                    <label className=\"my-1 mr-2\">Note</label>\n                  </th>\n                  <td>\n                    <p style={{ whiteSpace: \"pre-line\" }}>\n                      {this.state.noteText}\n                    </p>\n                  </td>\n                </tr>\n                <tr>\n                  <th>\n                    <label className=\"my-1 mr-2\">Updated At</label>\n                  </th>\n                  <td>\n                    <label className=\"my-1 mr-2\">{this.state.updatedAt}</label>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div>\n              <button\n                id=\"edit\"\n                className=\"btn btn-view-custom\"\n                onClick={this.handleEdit}\n              >\n                Edit this note\n              </button>\n              <button\n                id=\"delete\"\n                className=\"btn btn-view-custom\"\n                onClick={this.handleDelete}\n              >\n                Delete this note\n              </button>\n\n              <button\n                id=\"viewTopic\"\n                className=\"btn btn-view-custom\"\n                onClick={this.handleChanglePage}\n              >\n                View all notes\n              </button>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewNote;\n","const fetchPutAPI = async (url, body) => {\n  await fetch(url, {\n    method: \"PUT\",\n    mode: \"cors\", // no-cors, cors, *same-origin\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: body,\n    cache: \"no-cache\" // *default, no-cache, reload, force-cache, only-if-cached // body data type must match \"Content-Type\" header\n  });\n};\n\nexport default fetchPutAPI;\n","import React, { Component } from \"react\";\nimport config from \"../utils/config.json\";\nimport fetchPutAPI from \"../utils/fetchPutAPI\";\nclass Like extends Component {\n  state = { liked: this.props.liked };\n  handleLiked = async () => {\n    this.setState({ liked: !this.state.liked });\n    await fetchPutAPI(\n      config.apiEndPoint + \"/notes/\" + this.props.id + \"/like\",\n      \"\"\n    );\n  };\n  render() {\n    return (\n      <div>\n        {this.state.liked === true ? (\n          <i className=\"fa fa-bookmark\" onClick={this.handleLiked} />\n        ) : (\n          <i className=\"fa fa-bookmark-o\" onClick={this.handleLiked} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nconst Pagination = props => {\n  const { itemCount, pageSize, onPageChange, currentPage } = props;\n  const pageCount = Math.ceil(itemCount / pageSize);\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n  return (\n    <div>\n      <nav aria-label=\"Page navigation example\">\n        <ul className=\"pagination\">\n          {pages.map(page => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item\"\n              }\n            >\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                {page}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\nexport default Pagination;\n","import React, { Component } from \"react\";\nimport fetchGetAPI from \"../utils/fetchGetAPI\";\nimport config from \"../utils/config.json\";\nimport fetchDeleteAPI from \"../utils/fetchDeleteAPI\";\nimport Like from \"../commons/Like\";\nimport Pagination from \"../commons/Pagination\";\nimport { paginate } from \"../utils/paginate\";\nclass ViewAllNotes extends Component {\n  state = {\n    notes: [],\n    sortByUpdated: \"fa fa-sort-desc\",\n    sortedBy: \"updatedAt\",\n    direction: \"DESC\",\n    pageSize: 9,\n    currentPage: 1\n  };\n  async componentDidMount() {\n    await fetchGetAPI(\n      config.apiEndPoint +\n        \"/notes/\" +\n        this.state.sortedBy +\n        \"/\" +\n        this.state.direction\n    )\n      .then(data =>\n        Object.keys(data).length\n          ? this.setState({\n              notes: data\n            })\n          : {}\n      )\n      .catch(error => {\n        throw error;\n      });\n  }\n\n  handleDelete = async event => {\n    if (window.confirm(\"Are you sure you wish to delete this note?\")) {\n      await fetchDeleteAPI(\n        config.apiEndPoint + \"/notes/\" + event.currentTarget.id\n      );\n      await fetchGetAPI(\n        config.apiEndPoint +\n          \"/notes/\" +\n          this.state.sortedBy +\n          \"/\" +\n          this.state.direction\n      )\n        .then(data =>\n          Object.keys(data).length\n            ? this.setState({\n                notes: data\n              })\n            : {}\n        )\n        .catch(error => {\n          throw error;\n        });\n    }\n  };\n  handleDetail = event => {\n    this.props.history.push(\"/viewnote/\" + event.currentTarget.id);\n  };\n\n  handleSort = async event => {\n    if (event.currentTarget.id === \"sortByTopic\") {\n      this.setState({ sortByUpdated: \"\", sortedBy: \"topic\" });\n      if (this.state.sortByTopic === \"fa fa-sort-desc\") {\n        this.setState({ sortByTopic: \"fa fa-sort-asc\", direction: \"ASC\" });\n        await fetchGetAPI(config.apiEndPoint + \"/notes/topic/ASC\")\n          .then(data =>\n            Object.keys(data).length\n              ? this.setState({\n                  notes: data\n                })\n              : {}\n          )\n          .catch(error => {\n            throw error;\n          });\n      } else {\n        this.setState({ sortByTopic: \"fa fa-sort-desc\", direction: \"DESC\" });\n        await fetchGetAPI(config.apiEndPoint + \"/notes/topic/DESC\")\n          .then(data =>\n            Object.keys(data).length\n              ? this.setState({\n                  notes: data\n                })\n              : {}\n          )\n          .catch(error => {\n            throw error;\n          });\n      }\n    } else if (event.currentTarget.id === \"sortByUpdated\") {\n      this.setState({ sortByTopic: \"\", sortedBy: \"updatedAt\" });\n      if (this.state.sortByUpdated === \"fa fa-sort-desc\") {\n        this.setState({ sortByUpdated: \"fa fa-sort-asc\", direction: \"ASC\" });\n        await fetchGetAPI(config.apiEndPoint + \"/notes/updatedAt/ASC\")\n          .then(data =>\n            Object.keys(data).length\n              ? this.setState({\n                  notes: data\n                })\n              : {}\n          )\n          .catch(error => {\n            throw error;\n          });\n      } else {\n        this.setState({ sortByUpdated: \"fa fa-sort-desc\", direction: \"DESC\" });\n        await fetchGetAPI(config.apiEndPoint + \"/notes/updatedAt/DESC\")\n          .then(data =>\n            Object.keys(data).length\n              ? this.setState({\n                  notes: data\n                })\n              : {}\n          )\n          .catch(error => {\n            throw error;\n          });\n      }\n    }\n  };\n\n  //handle page change on pagination\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n  render() {\n    const {\n      sortByTopic,\n      pageSize,\n      sortByUpdated,\n      notes,\n      currentPage\n    } = this.state;\n    const paginatedNotes = paginate(notes, currentPage, pageSize);\n\n    return (\n      <React.Fragment>\n        <div className=\"Note-header\">\n          <i className=\"fa fa-file-text-o\" aria-hidden=\"true\" />\n          {\"   \"}\n          View all notes\n        </div>\n        <div className=\"Note-body\">\n          <div className=\"Note-table\">\n            <table className=\"table table-striped table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" id=\"sortByUpdated\" onClick={this.handleSort}>\n                    Updated Time{\"  \"}\n                    <i className={sortByUpdated} aria-hidden=\"true\" />\n                  </th>\n                  <th scope=\"col\" id=\"sortByTopic\" onClick={this.handleSort}>\n                    Topic{\"  \"}\n                    <i className={sortByTopic} aria-hidden=\"true\" />\n                  </th>\n                  <th scope=\"col\">Title</th>\n                  <th scope=\"col\">Detail</th>\n                  <th scope=\"col\">Delete</th>\n                  <th scope=\"col\">Bookmark</th>\n                </tr>\n              </thead>\n              <tbody>\n                {paginatedNotes.map(note => (\n                  <tr key={note.id}>\n                    <td>{new Date(note.updatedAt).toLocaleString()}</td>\n                    <td>{note.topic}</td>\n                    <td>{note.title}</td>\n                    <td>\n                      <button\n                        className=\"btn btn-outline-dark btn-sm\"\n                        id={note.id}\n                        onClick={this.handleDetail}\n                      >\n                        <i className=\"fa fa-list\" aria-hidden=\"true\" />\n                      </button>\n                    </td>\n                    <td>\n                      <button\n                        className=\"btn btn-outline-dark btn-sm\"\n                        id={note.id}\n                        onClick={this.handleDelete}\n                      >\n                        {note.liked}\n                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\" />\n                      </button>\n                    </td>\n                    <td>\n                      <Like liked={note.liked} id={note.id} />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                marginRight: \"2em\"\n              }}\n            >\n              <Pagination\n                itemCount={notes.length}\n                pageSize={pageSize}\n                onPageChange={this.handlePageChange}\n                currentPage={currentPage}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewAllNotes;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport fetchGetAPI from \"../utils/fetchGetAPI\";\nimport config from \"../utils/config.json\";\nimport fetchPostAPI from \"../utils/fetchPostAPI\";\nimport fetchPutAPI from \"../utils/fetchPutAPI\";\nclass EditNote extends Component {\n  state = {\n    id: \"\",\n    title: \"\",\n    url: \"\",\n    categories: [],\n    showModal: false,\n    modalTopic: \"\",\n    modalCategory: \"\"\n  };\n  async componentDidMount() {\n    fetchGetAPI(config.apiEndPoint + \"/categories\")\n      .then(data =>\n        Object.keys(data).length\n          ? this.setState({\n              categories: data\n            })\n          : {}\n      )\n      .catch(error => {\n        throw error;\n      });\n    let id = this.props.match.params.id;\n    this.setState({ id: id });\n    fetchGetAPI(config.apiEndPoint + \"/notes/\" + id).then(data => {\n      let time = new Date();\n      time.setTime(data.updatedAt);\n      this.setState({\n        topic: data.topic,\n        noteText: data.noteText,\n        url: data.url,\n        updatedAt: time.toLocaleString(),\n        title: data.title,\n        liked: data.liked\n      });\n    });\n  }\n  handleChangeTopic = event => {\n    if (event.target.value === \"Add\") this.handleToggleModal();\n    else {\n      this.setState({ topic: event.target.value });\n    }\n  };\n  handleToggleModal = () => {\n    this.state.showModal === false\n      ? this.setState({ showModal: true })\n      : this.setState({ showModal: false });\n  };\n\n  handleChangeTopicModal = event => {\n    this.setState({ modalTopic: event.target.value }, () =>\n      console.log(this.state.modalTopic)\n    );\n  };\n  handleChangeCategoryModal = event => {\n    this.setState({ modalCategory: event.target.value }, () =>\n      console.log(this.state.modalCategory)\n    );\n  };\n  handleSubmitNewTopic = () => {\n    let body = JSON.stringify({\n      topic: this.state.modalTopic,\n      category: this.state.modalCategory\n    });\n    //save to table category\n    fetchPostAPI(config.apiEndPoint + \"/categories\", body);\n    //fetch table category to update topic options\n    fetchGetAPI(config.apiEndPoint + \"/categories\")\n      .then(data =>\n        Object.keys(data).length\n          ? this.setState({\n              categories: data\n            })\n          : {}\n      )\n      .catch(error => {\n        throw error;\n      });\n    this.setState({ showModal: false });\n  };\n  handleChangeTitle = event => {\n    this.setState({ title: event.target.value });\n  };\n  handleChangeURL = event => {\n    this.setState({ url: event.target.value });\n  };\n  handleChangeNotes = event => {\n    this.setState({ noteText: event.target.value });\n  };\n  handleSubmit = async () => {\n    let body = JSON.stringify({\n      topic: this.state.topic,\n      title: this.state.title,\n      url: this.state.url,\n      noteText: this.state.noteText,\n      liked: this.state.liked\n    });\n\n    if (window.confirm(\"Are you sure to save changes to the note?\")) {\n      await fetchPutAPI(config.apiEndPoint + \"/notes/\" + this.state.id, body);\n      this.props.history.push(\"/viewnote/\" + this.state.id);\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Note-header\">\n          <i className=\"fa fa-sticky-note-o\" aria-hidden=\"true\" />\n          {\"    \"}\n          Edit note\n        </div>\n        <div className=\"Note-body\">\n          <div className=\"Note-form\">\n            <form>\n              <div className=\"form-group\">\n                <label className=\"my-1 mr-2\">Topic</label>{\" \"}\n                <select\n                  className=\"custom-select my-1 mr-sm-2\"\n                  id=\"inlineFormCustomSelectPref\"\n                  onChange={this.handleChangeTopic}\n                  value={this.state.value}\n                >\n                  <option defaultValue>{this.state.topic}</option>\n                  {this.state.categories.map(category => (\n                    <option key={category.id} value={category.topic}>\n                      {category.topic + \"  (\" + category.category + \")\"}\n                    </option>\n                  ))}\n\n                  <option value=\"Add\">Add new topic</option>\n                </select>\n              </div>\n\n              <div>\n                <Modal isOpen={this.state.showModal}>\n                  <ModalHeader>\n                    <i className=\"fa fa-list-ul\" aria-hidden=\"true\" />\n                    {\"    \"}Add new topic\n                  </ModalHeader>\n                  <ModalBody className=\"ModalBody\">\n                    <div className=\"row\">\n                      <div className=\"form-group col-md-6\">\n                        <label>Topic</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"modalTopic\"\n                          placeholder=\"Enter topic name here\"\n                          onChange={this.handleChangeTopicModal}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"form-group col-md-6\">\n                        <label>Category</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"modalCategory\"\n                          onChange={this.handleChangeCategoryModal}\n                        />\n                      </div>\n                    </div>\n                  </ModalBody>\n                  <ModalFooter>\n                    <input\n                      value=\"Submit\"\n                      className=\"btn btn-note-custom\"\n                      onClick={this.handleSubmitNewTopic}\n                      readOnly\n                    />\n                    <input\n                      onClick={this.handleToggleModal}\n                      value=\"Cancel\"\n                      className=\"btn btn-note-custom\"\n                      readOnly\n                    />\n                  </ModalFooter>\n                </Modal>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"inputTitle\"\n                  aria-describedby=\"titleHelp\"\n                  defaultValue={this.state.title}\n                  onChange={this.handleChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>URL</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"inputURL\"\n                  defaultValue={this.state.url}\n                  onChange={this.handleChangeURL}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Note</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"inputNoteText\"\n                  cols=\"30\"\n                  rows=\"15\"\n                  onChange={this.handleChangeNotes}\n                  value={this.state.noteText}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-custom\"\n                onClick={this.handleSubmit}\n              >\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EditNote;\n","import React from \"react\";\nimport \"./App.css\";\nimport Note from \"./components/AddNote\";\nimport NavBar from \"./components/NavBar\";\nimport ViewNote from \"./components/ViewNote\";\nimport { Switch } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\nimport ViewAllNotes from \"./components/ViewAllNotes\";\nimport EditNote from \"./components/EditNote\";\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <NavBar />\n        </div>\n        <div className=\"App-body\">\n          <Switch>\n            <Route path=\"/addnote\" component={Note} />\n            <Route path=\"/viewnote/:id\" component={ViewNote} />\n            <Route path=\"/viewallnotes\" component={ViewAllNotes} />\n            <Route path=\"/editnote/:id\" component={EditNote} />\n            <Route path=\"/\" component={ViewAllNotes} />\n          </Switch>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}